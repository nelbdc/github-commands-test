name: Matrix
on:
  workflow_dispatch:
    inputs:
      os:
        type: string
        default: "ubuntu-latest,windows-latest"
      node-version:
        type: string
        default: "14,15,16"
jobs:
  set-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: set matrix
        id: set-matrix
        uses: actions/github-script@v6
        with:
          script: |
            return {'os': context.payload.inputs['os'].split(','),'node-version': context.payload.inputs['node-version'].split(',') }
          result-encoding: json
      # - name: variable 1
      #   id: os
      #   run: echo "os=${{ steps.set-matrix.outputs.result['os'] }}" >> "$GITHUB_OUTPUT"
      # - name: variable 2
      #   id: node-version
      #   run: echo "'node-version'=${{ steps.set-matrix.outputs.result['node-version'] }}" >> "$GITHUB_OUTPUT"

      - name: show-variables
        run: |
          echo "${{ toJson(steps.set-matrix.outputs.result ) }}"

  node-matrix:
    if: false
    strategy:
      matrix:
        os: ${{ join(inputs.string) }}
        node-version: [14, 15, 16]
        include:
          - os: ubuntu-lastest
            is-ubuntu: true
          - os: macos-latest
            is-macos: true
          - os: windows-latest
            is-windows: true
          - experimental: true
          - os: ubuntu-lastest
            node-version: 16
            experimental: true
          - os: ubuntu-lastest
            node-version: 17
        exclude:
          - os: ubuntu-latest
            node-version: 14
      fail-fast: true
      max-parallel: 3
    continue-on-error: ${{ matrix.experimental == true }}
    runs-on: ${{ matrix.os }}
    steps:
      - if: matrix.experimental == true
        run: exit 1
      - run: node -v
      - run: echo '${{ toJson(matrix) }}'
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: node -v
